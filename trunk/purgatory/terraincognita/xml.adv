{ Sequence transforms }
{ do on popping too, below }
MIX (Seq (Tag q a) (Tag q b)) done => MIX (Tag q (Seq a b)) done;
MIX (Seq (Seq a b) c) done => MIX (Seq a (Seq b c)) done;


{ Tag transforms }
{ do on pushing too, below }
MIX (Tag q (Tag q x)) done => MIX (Tag q x) done;


MIX (Tag Maj (Tag Emph d)) done => MIX (Tag Emph (Tag Maj d)) done;
MIX (Tag Maj (Tag Bold d)) done => MIX (Tag Bold (Tag Maj d)) done;
MIX (Tag Emph (Tag Bold d)) done => MIX (Tag Bold (Tag Emph d)) done;


{ Argument evaluation }
MIX (Seq a b) done => MIX a (Push done b);

{ Result popping }
MIX (Tag q d) (Tag q done) => MIX d (Tag q done);

MIX (Tag Emph d) (Tag Maj done) => MIX (Tag Emph (Tag Maj d)) done;
MIX (Tag Bold d) (Tag Emph done) => MIX (Tag Bold (Tag Emph d)) done;
MIX (Tag Bold d) (Tag Maj done) => MIX (Tag Bold (Tag Maj d)) done;


MIX (head a b) done => MIX b (head a done); {
MIX (Tag q d) done => MIX d (Tag q done);+++}

{ Reversal }
MIX embryo (Push done b) => MIX b (Seq embryo done);
MIX embryo (head a b) => XIM (head a embryo) b;

{ Reconstruction }
XIM (Seq a b) (Push done c) => MIX (Seq a (Seq b c)) done;
XIM d (Push done b) => MIX b (Seq d done);
XIM (Tag q d) (Seq (Tag q a) b) => MIX (Tag q (Seq a d)) b;

XIM d (head a b) => XIM (head a d) b;
XIM d ROOT => d;

{ Evaluation context }
SNF x => MIX x ROOT;

{ No more rules }
.

